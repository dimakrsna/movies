{"version":3,"sources":["api/index.ts","store.ts","pages/main/styles.ts","common/styles.ts","pages/main/index.tsx","pages/404/styles.ts","pages/404/index.tsx","common/error-boundary/styles.ts","common/error-boundary/index.tsx","pages/about-film/recomendations/styles.ts","pages/about-film/recomendations/index.tsx","pages/about-film/styles.ts","pages/about-film/index.tsx","index.tsx"],"names":["token","axiosInstance","axios","create","baseURL","API","get","concat","then","response","id","value","createBrowserHistory","require","store","history","task","this","movies","data","getMovieDetailsStatus","movieDetails","goBack","recomendationMovies","observable","actionAsync","action","_this","searchValue","autobind","ListLink","styled","Link","_templateObject","ListItem","li","_templateObject2","ListWrapper","ul","_templateObject3","FormWrapper","form","_templateObject4","SearchInput","input","_templateObject5","EmptyResult","p","_templateObject6","Button","span","styles_templateObject","Main","inject","_dec","main_class","observer","main_temp","_class2","_React$Component","_getPrototypeOf2","Object","classCallCheck","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","onValueChanged","event","currentTarget","props","onSearchValueChanged","ononMovieSearch","preventDefault","onMovieSearch","mapFilmsList","toJS","results","react_default","a","createElement","map","item","key","to","title","inherits","createClass","getMovies","Fragment","onSubmit","onChange","placeholder","onClick","React","Component","defaultProps","PageWrapper","main","_404_styles_templateObject","Title","h2","styles_templateObject2","Description","styles_templateObject3","Page404","useHistory","push","error_boundary_styles_templateObject","error_boundary_styles_templateObject2","ErrorBoundary","state","hasError","styles_PageWrapper","styles_Title","children","recomendations_styles_templateObject","recomendations_styles_templateObject2","recomendations_styles_templateObject3","Recomendations","filterList","filter","counter","mapRecomedations","styles_ListWrapper","styles_ListItem","styles_ListLink","_this$props","match","params","getRecomendationMovies","PureComponent","withRouter","AboutWrapper","about_film_styles_templateObject","about_film_styles_templateObject2","about_film_styles_templateObject3","Info","styles_templateObject4","Poster","img","styles_templateObject5","AboutFilm","getMovieDetails","nextProps","_this$props2","prevId","nextId","_store$movieDetails","release_date","original_language","overview","poster_path","popularity","src","about_film_styles_Title","styles_Description","recomendations","_404_Page404","browserHistory","routingStore","RouterStore","syncHistoryWithStore","stores","routing","App","error_boundary_ErrorBoundary","react_router","exact","path","component","ReactDOM","render","mobx_react_module","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.3b688b31.chunk.js","sourcesContent":["import axios from 'axios'\nconst token = 'adf2709706ec77e0991eb74caf0380a5'\n\nexport const axiosInstance = axios.create({\n  baseURL: 'https://api.themoviedb.org',\n})\n\nexport const API = {\n  getMovies: () => {\n    return axiosInstance.get(`/3/trending/all/week?api_key=${token}`).then(response => {\n      return response\n    })\n  },\n  \n  getMovieDetails: (id: string) => {\n    return axiosInstance.get(`/3/movie/${id}?api_key=${token}`).then(response => {\n      return response\n    })\n  },\n\n  onMovieSearch: (value: string) => {\n    return axiosInstance.get(`/3/search/movie?api_key=${token}&query=${value}`).then(response => {\n      return response\n    })\n  },\n\n  getRecommendations: (id: string) => {\n    return axiosInstance.get(`/3/movie/${id}/recommendations?api_key=${token}`).then(response => {\n      return response\n    })\n  },\n}","import { observable, action } from 'mobx'\nimport { ApiTypes, RequestStatus } from './types'\nimport { actionAsync, task } from \"mobx-utils\"\nimport { API } from './api'\nimport { AxiosResponse } from 'axios'\nimport autobind from 'autobind-decorator'\nconst createBrowserHistory = require(\"history\").createBrowserHistory\n\nclass Store {\n\t@observable\n\tmovies: ApiTypes.Movies | null = null\n\n\t@actionAsync\n\tasync getMovies() {\n\t\ttry {\n\t\t\tconst response: AxiosResponse<any> = await task(API.getMovies())\n\t\t\tthis.movies = response.data\n\t\t} catch (error) { }\n\t}\n\n\t@observable\n\tsearchValue: string = ''\n\n\t@action\n\tonSearchValueChanged = (value: string) => {\n\t\tthis.searchValue = value\n\t}\n\n\t@actionAsync\n\tasync onMovieSearch(value: string) {\n\t\ttry {\n\t\t\tconst response: AxiosResponse<any> = await task(API.onMovieSearch(value))\n\t\t\tthis.movies = response.data\n\t\t} catch (error) { }\n\t}\n\n\t@observable\n\tmovieDetails: ApiTypes.Movie | null = null\n\n\t@observable\n\tgetMovieDetailsStatus: RequestStatus = ''\n\n\t@actionAsync\n\tasync getMovieDetails(id: string) {\n\t\ttry {\n\t\t\tthis.getMovieDetailsStatus = 'PENDING'\n\t\t\tconst response: AxiosResponse<any> = await task(API.getMovieDetails(id))\n\t\t\tif(response.data){\n\t\t\t\tthis.movieDetails = response.data\n\t\t\t\tthis.getMovieDetailsStatus = 'SUCCESS'\n\t\t\t}\n\t\t\t\n\t\t} catch (error) { \n\t\t\tthis.getMovieDetailsStatus = 'ERROR'\n\t\t}\n\t}\n\n\thistory = createBrowserHistory()\n\t@autobind goBack() {\n\t\tthis.history.goBack()\n\t}\n\n\t@observable\n\trecomendationMovies: ApiTypes.Movies | null = null\n\n\t@actionAsync\n\tasync getRecomendationMovies(id: string) {\n\t\ttry {\n\t\t\tconst response: AxiosResponse<any> = await task(API.getRecommendations(id))\n\t\t\tthis.recomendationMovies = response.data\n\t\t} catch (error) { }\n\t}\n}\n\nexport const store = new Store()\n","import styled from 'styled-components'\nimport { Link } from 'react-router-dom'\n\nexport const ListLink = styled(Link)`\n  display: inline-block;\n`\n\nexport const ListItem = styled.li`\n  list-style-type: none;\n`\n\nexport const ListWrapper = styled.ul``\n\nexport const FormWrapper = styled.form`\n  padding: 30px 40px 20px;\n`\n\nexport const SearchInput = styled.input`\n  height: 30px;\n  border: 1px solid #ccc;\n  border-radius: 3px;\n  line-height: 30px;\n  padding: 0 10px;\n  outline: none;\n  margin-right: 10px;\n`\n\nexport const EmptyResult = styled.p`\n  padding: 10px 40px;\n`","import styled from 'styled-components'\n\nexport const Button = styled.span`\n  display: inline-block;\n  height: 30px;\n  margin-right: 10px;\n  line-height: 30px;\n  padding: 0 10px;\n  margin-top: 10px;\n  border-radius: 3px;\n  background: #ccc;\n  cursor: pointer;\n  transition: 0.2s;\n\n  &:hover {\n    background: #a6a2a2;\n  }\n`","import React from 'react'\nimport { toJS } from 'mobx'\nimport { observer, inject } from 'mobx-react'\nimport { StoreTypes, ApiTypes } from './../../types/index'\nimport {\n  ListWrapper,\n  ListLink,\n  ListItem,\n  FormWrapper,\n  SearchInput,\n  EmptyResult,\n} from './styles'\nimport { Button } from './../../common/styles'\n\ninterface Props {\n  store: StoreTypes\n}\n\n@inject('store')\n@observer\nexport class Main extends React.Component<Props> {\n  \n  static defaultProps = {\n    store: {} as StoreTypes,\n  }\n\n  onValueChanged = (event: React.FormEvent<HTMLInputElement>) => {\n    const { value } = event.currentTarget\n    const { store } = this.props\n    store.onSearchValueChanged(value)\n  }\n\n  ononMovieSearch = (event: React.FormEvent) => {\n    event.preventDefault()\n\n    const { store } = this.props\n\n    if (store.searchValue) {\n      store.onMovieSearch(store.searchValue)\n    }\n  }\n\n  mapFilmsList = () => {\n    const { store } = this.props\n    const data = toJS(store.movies)\n    \n    const results = (data) ? data.results : []\n\n    if (results.length) {\n      return (\n        <ListWrapper>\n          {results.map((item: ApiTypes.Movie) => (\n            <ListItem key={item.id}>\n              <ListLink to={`/about-film/${item.id}`}>\n                {item.title}\n              </ListLink>\n            </ListItem>\n          ))}\n        </ListWrapper>\n      )\n\n    } else {\n      return <EmptyResult>Nothing matching</EmptyResult>\n    }\n  }\n\n  componentDidMount() {\n    const { store } = this.props\n\n    if(!store.searchValue){\n      store.getMovies()\n    }\n\n  }\n\n  render() {\n    const { store } = this.props\n    return (\n      <>\n        <FormWrapper onSubmit={this.ononMovieSearch}>\n          <SearchInput value={store.searchValue} onChange={this.onValueChanged} placeholder=\"Movie name\" />\n          <Button onClick={this.ononMovieSearch}>Search</Button>\n        </FormWrapper>\n        {this.mapFilmsList()}\n      </>\n    )\n  }\n}","import styled from 'styled-components'\n\nexport const PageWrapper = styled.main`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-wrap: wrap;\n  align-content: center;\n  width: 100%;\n  min-height: 100vh;\n`\n\nexport const Title = styled.h2`\n  font-size: 40px;\n`\n\nexport const Description = styled.p`\n  font-size: 16px;\n  width: 100%;\n  text-align: center;\n`","import React from 'react'\nimport { useHistory } from \"react-router-dom\"\nimport {\n  PageWrapper,\n  Title,\n  Description\n} from './styles'\nimport { Button } from './../../common/styles'\n\nexport const Page404 = () => {\n  const history = useHistory()\n\n  return (\n    <PageWrapper>\n      <Title>404</Title>\n      <Description>Sorry, such page does not exist</Description>\n      <Button onClick={() => history.push(\"/\")}>Go to index</Button>\n    </PageWrapper>\n  )\n}\n","import styled from 'styled-components'\n\nexport const PageWrapper = styled.main`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-wrap: wrap;\n  align-content: center;\n  width: 100%;\n  min-height: 100vh;\n`\n\nexport const Title = styled.h2`\n  font-size: 30px;\n`\n","import React from 'react'\nimport { PageWrapper, Title } from './styles'\n\ninterface State {\n  hasError: boolean\n}\n\ninterface Props {\n  children: React.ReactNode\n}\n\nexport class ErrorBoundary extends React.Component<Props, State> {\n\n  state = {\n    hasError: false,\n  }\n\n  static getDerivedStateFromError() {\n    return { hasError: true }\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return (\n        <PageWrapper>\n          <Title>Something went wrong</Title>\n        </PageWrapper>\n      )\n    }\n\n    return this.props.children\n  }\n}","import styled from 'styled-components'\nimport { Link } from 'react-router-dom'\n\nexport const ListLink = styled(Link)`\n  display: inline-block;\n`\n\nexport const ListItem = styled.li`\n  list-style-type: none;\n`\n\nexport const ListWrapper = styled.ul`\n  padding-inline-start: 0;\n`","import React from 'react'\nimport { observer, inject } from 'mobx-react'\nimport { toJS } from 'mobx'\nimport { StoreTypes, ApiTypes } from './../../../types'\nimport { withRouter } from 'react-router-dom'\nimport { ListLink, ListItem, ListWrapper } from './styles'\n\ninterface Props {\n  store: StoreTypes\n  match: any\n  history: any\n}\n\n@inject(\"routing\")\n@inject(\"store\")\n@observer\nclass Recomendations extends React.PureComponent<Props> {\n\n  static defaultProps = {\n    store: {} as StoreTypes,\n    match: {\n      params: {\n        id: ''\n      }\n    }\n  }\n\n  componentDidMount(){\n    const { store, match } = this.props\n    const { id } = match.params\n    \n    store.getRecomendationMovies(id)\n  }\n\n  filterList = (recomendationMovies: ApiTypes.Movie[]): ApiTypes.Movie[] => {\n    if(recomendationMovies.length){\n      return recomendationMovies.filter((item, counter: number) => counter < 5)\n    } else {\n      return []\n    }\n  }\n\n  mapRecomedations = (recomendationMovies: ApiTypes.Movies) => {\n    const data = toJS(recomendationMovies)\n    const { results } = data\n\n    const movies = this.filterList(results)\n\n    if (movies.length) {\n      return (\n        <ListWrapper>\n          {movies.map((item: ApiTypes.Movie) => (\n            <ListItem key={item.id}>\n              <ListLink to={`/about-film/${item.id}`}>\n                {item.title}\n              </ListLink>\n            </ListItem>\n          ))}\n        </ListWrapper>\n      )\n\n    } else {\n      return <div>No recomendations find</div>\n    }\n  }\n\n  render(){\n    const { store } = this.props\n    return (\n      <>\n        <h3>Recomendations:</h3>\n        {store.recomendationMovies && this.mapRecomedations(store.recomendationMovies)}\n      </>\n    )\n  }\n}\n\nexport default withRouter(Recomendations)\n","import styled from 'styled-components'\n\nexport const AboutWrapper = styled.main`\n  width: 60%;\n  min-width: 500px;\n  padding: 20px 0;\n  margin: auto;\n`\n\nexport const Title = styled.h2`\n  font-size: 25px;\n  margin-bottom: 10px;\n`\n\nexport const Description = styled.p`\n  font-size: 14px;\n  margin: 10px 0;\n`\n\nexport const Info = styled.p`\n  font-size: 14px;\n  font-weight: bold;\n  margin-bottom: 5px;\n`\n\nexport const Poster = styled.img`\n  height: 530px;\n  display: block;\n`\n\n\n\n","import React from 'react'\nimport { observer, inject } from 'mobx-react'\nimport { withRouter } from 'react-router-dom'\nimport { StoreTypes } from './../../types/index'\nimport { Page404 } from './../404'\nimport Recomendations from './recomendations'\nimport {\n  Title,\n  AboutWrapper,\n  Description,\n  Info,\n  Poster,\n} from './styles'\nimport { Button } from './../../common/styles'\n\ninterface Props {\n  store: StoreTypes\n  match: any\n  history: any\n}\n\n@inject(\"routing\")\n@inject(\"store\")\n@inject(\"history\")\n@observer\nclass AboutFilm extends React.Component<Props> {\n\n  static defaultProps = {\n    store: {} as StoreTypes,\n    match: {\n      params: {\n        id: ''\n      }\n    }\n  }\n\n  componentDidMount() {\n    const { store, match } = this.props\n    const { id } = match.params\n    store.getMovieDetails(id)\n  }\n\n  componentWillReceiveProps(nextProps){\n    const { store, match } = this.props\n    const prevId = match.params.id\n    const nextId = nextProps.match.params.id\n\n    if(prevId != nextId){\n      store.getMovieDetails(nextId)\n    }\n  }\n\n  render() {\n    const { store } = this.props\n\n    if (store.movieDetails) {\n\n      const {\n        title,\n        release_date,\n        original_language,\n        overview,\n        poster_path,\n        popularity,\n      } = store.movieDetails\n\n      return (\n        <AboutWrapper>\n          {poster_path && <Poster src={`https://image.tmdb.org/t/p/w500/${poster_path}`} />}\n          <Title>{title}</Title>\n          <Description>{overview}</Description>\n          <Info>Release date: {release_date}</Info>\n          <Info>language: {original_language}</Info>\n          <Info>Popularity: {popularity}</Info>\n          <Button onClick={this.props.store.goBack}>Go back</Button>\n          <Button onClick={() => this.props.history.push(\"/\")}>Go to index</Button>\n          <Recomendations />\n        </AboutWrapper>\n      )\n    }\n\n    if(store.getMovieDetailsStatus === 'PENDING'){\n      return null\n    }\n    \n    else return <Page404 />\n  }\n}\n\nexport default withRouter(AboutFilm)\n\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'mobx-react'\nimport { store } from './store'\nimport { Main } from './pages/main'\nimport { Page404 } from './pages/404'\nimport { ErrorBoundary } from './common/error-boundary'\nimport AboutFilm from './pages/about-film'\nimport { RouterStore, syncHistoryWithStore } from 'mobx-react-router'\nimport { Router, Switch, Route } from 'react-router'\nconst createBrowserHistory = require(\"history\").createBrowserHistory\nconst browserHistory = createBrowserHistory()\nconst routingStore = new RouterStore()\nconst history = syncHistoryWithStore(browserHistory, routingStore);\n\nconst stores = {\n\tstore: store,\n\trouting: routingStore,\n}\n\nclass App extends React.Component {\n\trender() {\n\t\treturn (\n\t\t\t<ErrorBoundary>\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route exact path=\"/about-film/:id\" component={AboutFilm} />\n\t\t\t\t\t<Route exact path=\"/\" component={Main} />\n\t\t\t\t\t<Route path=\"*\" component={Page404} />\n\t\t\t\t</Switch>\n\t\t\t</ErrorBoundary>\n\t\t)\n\t}\n}\n\nReactDOM.render(\n\t<Provider {...stores}>\n\t\t<Router history={history}>\n\t\t\t<App />\n\t\t</Router>\n\t</Provider>,\n\tdocument.getElementById('root'),\n)\n"],"sourceRoot":""}